# Add croma-specific code to components/croma/

--- /dev/null
+++ b/components/croma/BUILD.gn
@@ -0,0 +1,14 @@
+# Copyright (c) 2020 The croma Authors. All rights reserved.
+# Use of this source code is governed by a BSD-style license that can be
+# found in the LICENSE file.
+
+component("croma_switches") {
+  sources = [
+    "croma_switches.h",
+    "croma_switches.cc",
+  ]
+
+  defines = [ "IS_CROMA_IMPL" ]
+
+  deps = [ "//base" ]
+}
--- /dev/null
+++ b/components/croma/croma_switches.cc
@@ -0,0 +1,18 @@
+// Copyright (c) 2020 The croma Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "components/croma/croma_switches.h"
+
+namespace switches {
+
+// Enable fingerprinting deception for getClientRects and getBoundingClientRect
+const char kFingerprintingClientRectsNoise[] = "fingerprinting-client-rects-noise";
+
+// Enable fingerprinting deception for measureText
+const char kFingerprintingCanvasMeasureTextNoise[] = "fingerprinting-canvas-measuretext-noise";
+
+// Enable fingerprinting deception for Canvas image data
+const char kFingerprintingCanvasImageDataNoise[] = "fingerprinting-canvas-image-data-noise";
+
+}  // namespace switches
--- /dev/null
+++ b/components/croma/croma_switches.h
@@ -0,0 +1,20 @@
+// Copyright (c) 2020 The croma Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+// Defines all the fingerprinting command-line switches.
+
+#ifndef THIRD_PARTY_CROMA_FINGERPRINTING_SWITCHES_H_
+#define THIRD_PARTY_CROMA_FINGERPRINTING_SWITCHES_H_
+
+#include "base/component_export.h"
+
+namespace switches {
+
+COMPONENT_EXPORT(CROMA) extern const char kFingerprintingClientRectsNoise[];
+COMPONENT_EXPORT(CROMA) extern const char kFingerprintingCanvasMeasureTextNoise[];
+COMPONENT_EXPORT(CROMA) extern const char kFingerprintingCanvasImageDataNoise[];
+
+}
+
+#endif  // THIRD_PARTY_CROMA_FINGERPRINTING_SWITCHES_H_
